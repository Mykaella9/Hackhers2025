// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL") // e.g. file:./prisma/dev.db
}

generator client {
  provider = "prisma-client-js"
}

model Manager {
  id        Int    @id
  firstName String
  lastName  String

  teams Team[] // 1:N -> each Team has one Manager
  users User[] // 1:N -> each User has one Manager (optional FK on User)
}

model Team {
  id   Int    @id
  name String

  // Team -> Manager (many teams per one manager)
  managerId Int
  manager   Manager @relation(fields: [managerId], references: [id])

  // Entitlements attached to this team (M:N)
  entitlements Entitlement[] @relation("TeamEntitlements")

  // Users on this team (M:N)
  users User[] @relation("TeamMembers")

}

model User {
  id         Int    @id
  firstName  String
  lastName   String
  computerId Int

  // User -> Manager (many users per one manager)
  managerId Int?
  manager   Manager? @relation(fields: [managerId], references: [id])

  // Entitlements directly on the user (M:N)
  entitlements Entitlement[] @relation("UserEntitlements")

  // Teams this user belongs to (M:N)
  teams Team[] @relation("TeamMembers")
}

model Entitlement {
  id    Int    @id
  name  String
  type  String
  level Int

  // Back-refs for the two separate M:N relations
  teams Team[] @relation("TeamEntitlements")
  users User[] @relation("UserEntitlements")
}
